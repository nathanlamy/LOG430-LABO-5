name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Lint all services
        run: |
          for dir in produit-service vente-service stock-service reporting-service; do
            echo "🔍 Linting $dir"
            cd $dir
            npm ci
            npm run lint || echo "Lint warnings ignored"
            cd ..
          done

  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Run ESLint
  #       run: npm run lint

  # test:
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:14
  #       env:
  #         POSTGRES_DB: magasin
  #         POSTGRES_USER: magasin_user
  #         POSTGRES_PASSWORD: secret
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Wait for Postgres
  #       run: |
  #         until pg_isready -h localhost -p 5432; do sleep 1; done

  #     - name: Run tests
  #       env:
  #         DATABASE_URL: postgres://magasin_user:secret@localhost:5432/magasin
  #       run: npm test

  # docker:
  #   runs-on: ubuntu-latest
  #   needs: [lint, test]
  #   if: success()
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Build project (check dist/)
  #       run: |
  #         npm run build
  #         echo "Contents of dist:"
  #         ls -la dist

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push Docker image
  #       run: |
  #         docker build -t ${{ secrets.DOCKER_USERNAME }}/magasin-backend:latest .
  #         docker push ${{ secrets.DOCKER_USERNAME }}/magasin-backend:latest
